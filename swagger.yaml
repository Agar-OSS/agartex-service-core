openapi: 3.0.3
info:
  title: Agartex Service
  description: |-
    This is a server for compiling Latex documents and authenticating users
  version: 0.0.1
servers:
  - url: http://localhost:3000
tags:
  - name: user
    description: Operations about user
  - name: compile
    description: LaTeX document compilation
  - name: auth
    description: User authentication utilities
  - name: projects
    description: Operations about projects
paths:
  /users:
    get:
      summary: Gets the user associated with the given sessionId in RSESSID cookie
      tags:
        - auth
      security:
        - session_id: []
      parameters:
        - in: cookie
          name: RSESSID
          schema:
            type: string
          required: true
          description: ID of the session
      operationId: verify
      responses:
        200:
          description: Adds user ID to headers
          headers:
            X-User-Id:
              description: Authenticated User ID
              schema:
                type: integer
                example: 1234
        400:
          description: Malformed request
        401:
          description: Could not verify the given session ID
    post:
      tags:
        - user
      summary: Register user
      description: This will register a new user with the given email and password.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        201:
          description: Successfully created user
        400:
          description: Malformed request
        409:
          description: Duplicate email
        415:
          description: Unsupported media type
        422:
          description: Request body validation errors (e.g. incorrect email format, weak password)
          content:
            text/plain:
              schema:
                type: string
  /sessions:
    post:
      tags:
        - user
      summary: Logs user into the system
      description: |-
        The session ID is returned in a cookie called 'RSESSID' and it must be included in authentication.
        Required options: Secure, HttpOnly
      operationId: loginUser
      requestBody:
        description: Login Credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        201:
          description: Successfully created session
          headers:
            Set-Cookie:
              description: Session token
              schema:
                type: string
                example: RSESSID=token_value; Secure; HttpOnly
        400:
          description: Malformed request body
        401:
          description: Authentication using supplied email and password failed
        415:
          description: Unsupported media type
        422:
          description: Request body validation errors (e.g. missing password field)
          content:
            text/plain:
              schema:
                type: string
  /compile:
    post:
      tags:
        - compile 
      summary: Compiles the provided LaTeX text into a pdf file
      description: |-
        Takes in text that should be a valid LaTeX document and returns the compiled PDF.
      operationId: simpleCompile
      requestBody:
        description: Document body
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: PDF file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        400:
          description: Malformed request
        401:
          description: Unauthorized
        415:
          description: Unsupported media type
        422:
          description: Compilation errors
          content:
            text/plain:
              schema: 
                type: string
  /projects:
    get:
      tags:
        - projects 
      summary: Get project list
      description: Returns a list of project for a specific user 
      security:
        - session_id: []
      responses:
        200:
          description: Projects list 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
        400:
          description: Malformed request
        404:
          description: Project not found
    post:
      tags:
        - projects
      summary: Create a new project
      security:
        - session_id: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectData"
      description: Creates a new project with the given name owned by the authenticated user
      responses:
        201:
          description: Project created successfully
        400:
          description: Malformed Request 
        401:
          description: Unauthorized
        415:
          description: Wrong content type (should be JSON)
        422:
          description: Missing fields
  /projects/{projectId}:
    get:
      tags:
        - projects
      summary: Gets the raw document of project
      security:
        - session_id: []
      description: The LaTeX document of the project will be returned as plain text in the response body
      responses:
        200:
          description: Successfully retrieved project document
          content:
            text/plain:
              schema:
                type: string
              example: |-
                \documentclass{article}
                \begin{document}
                This is some good LaTeX.
                \[
                  x = y^2
                \]
                \end{document}

        400:
          description: Malformed Request 
        401:
          description: Unauthorized
        404:
          description: No project found
    put:
      tags:
        - projects
      summary: Updates raw document of project
      security:
        - session_id: []
      requestBody:
        content:
          text/plain:
            schema:
              type: string
            example: |-
              \documentclass{article}
              \begin{document}
              This is some good LaTeX.
              \[
                x = y^2
              \]
              \end{document}
      description: The text in the request body will be set as the new document text for the supplied project
      responses:
        201:
          description: Project updated successfully
        400:
          description: Malformed Request 
        401:
          description: Unauthorized
        404:
          description: No project found 
        415:
          description: Wrong content type (should be plain text)
        422:
          description: Missing fields
  /projects/{projectId}/metadata:
    put:
      tags:
        - projects
      summary: Updates metadata of a project
      security:
        - session_id: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectData"
      description: Updates the name of the project.
      responses:
        201:
          description: Project updated successfully
        400:
          description: Malformed Request 
        401:
          description: Unauthorized
        415:
          description: Wrong content type (should be JSON)
        422:
          description: Missing fields
components:
  schemas:
    Credentials:
      type: object
      properties:
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: Password1@
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: Password1@
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        owner:
          type: integer
          format: int64
        main_document_id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: sample_project
    ProjectData:
      type: object
      properties:
        name:
          type: string
          example: sample_project
  securitySchemes:
    session_id:
      type: apiKey
      in: cookie
      name: RSESSID
