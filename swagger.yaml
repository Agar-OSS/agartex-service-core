openapi: 3.0.3
info:
  title: Agartex Service
  description: |-
    This is a server for compiling Latex documents and authenticating users
  version: 0.0.1
servers:
  - url: http://localhost:3000
tags:
  - name: user
    description: Operations about user
  - name: auth
    description: User authentication utilities
  - name: compile
    description: LaTeX document compilation
  - name: projects
    description: Operations about projects
  - name: resources
    description: CRUD operations for resources
  - name: documents
    description: CRUD operations for documents
paths:
  /users:
    post:
      tags:
        - user
      summary: Register user
      description: This will register a new user with the given email and password.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credentials"
      responses:
        201:
          description: Successfully created user
        400:
          description: Malformed request
        409:
          description: Duplicate email
        415:
          description: Unsupported media type
        422:
          description: Request body validation errors (e.g. incorrect email format, weak password)
          content:
            text/plain:
              schema:
                type: string
  /sessions:
    post:
      tags:
        - auth
      summary: Logs user into the system
      description: |-
        The session ID is returned in a cookie called 'RSESSID' and it must be included in authentication.
        Required options: Secure, HttpOnly
      operationId: loginUser
      requestBody:
        description: Login Credentials
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credentials"
      responses:
        201:
          description: Successfully created session
          headers:
            Set-Cookie:
              description: Session token
              schema:
                type: string
                example: RSESSID=token_value; Secure; HttpOnly
        400:
          description: Malformed request body
        401:
          description: Authentication using supplied email and password failed
        415:
          description: Unsupported media type
        422:
          description: Request body validation errors (e.g. missing password field)
          content:
            text/plain:
              schema:
                type: string
    delete:
      tags:
        - auth
      summary: Delete session
      description: Deletes the current session
      security:
        - session_id: []
      responses:
        204:
          description: Successfully deleted session
        400:
          description: Malformed request
        401:
          description: Missing session token
        422:
          description: Incorrect token (e.g. too short)
  /compile:
    post:
      tags:
        - compile
      summary: Compiles the provided LaTeX text into a pdf file
      description: |-
        Takes in text that should be a valid LaTeX document and returns the compiled PDF.
      operationId: simpleCompile
      requestBody:
        description: Document body
        content:
          text/plain:
            schema:
              type: string
      responses:
        200:
          description: PDF file
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        400:
          description: Malformed request
        401:
          description: Unauthorized
        415:
          description: Unsupported media type
        422:
          description: Compilation errors
          content:
            text/plain:
              schema:
                type: string
  /projects:
    get:
      tags:
        - projects
      summary: Get project list
      description: Returns a list of project for a specific user
      security:
        - session_id: []
      responses:
        200:
          description: Projects list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
        400:
          description: Malformed request
        404:
          description: Project not found
    post:
      tags:
        - projects
      summary: Create a new project
      security:
        - session_id: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectMetadata"
      description: Creates a new project with the given name owned by the authenticated user
      responses:
        201:
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        400:
          description: Malformed Request
        401:
          description: Unauthorized
        415:
          description: Wrong content type (should be JSON)
        422:
          description: Missing fields
  /projects/{projectId}:
    get:
      tags:
        - documents
        - projects
      summary: Gets the raw document of project
      security:
        - session_id: []
      description: The LaTeX document of the project will be returned as plain text in the response body
      responses:
        200:
          description: Successfully retrieved project document
          content:
            text/plain:
              schema:
                type: string
              example: |-
                \documentclass{article}
                \begin{document}
                This is some good LaTeX.
                \[
                  x = y^2
                \]
                \end{document}
        400:
          description: Malformed Request
        401:
          description: Unauthorized
        404:
          description: No project found
    put:
      tags:
        - documents
        - projects
      summary: Updates raw document of project
      security:
        - session_id: []
      requestBody:
        content:
          text/plain:
            schema:
              type: string
            example: |-
              \documentclass{article}
              \begin{document}
              This is some good LaTeX.
              \[
                x = y^2
              \]
              \end{document}
      description: The text in the request body will be set as the new document text for the supplied project
      responses:
        201:
          description: Project updated successfully
        400:
          description: Malformed Request
        401:
          description: Unauthorized
        404:
          description: No project found
        415:
          description: Wrong content type (should be plain text)
        422:
          description: Missing fields
  /projects/{projectId}/metadata:
    put:
      tags:
        - projects
      summary: Updates metadata of a project
      security:
        - session_id: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectMetadata"
      description: Updates the name of the project.
      responses:
        204:
          description: Project updated successfully
        400:
          description: Malformed Request
        401:
          description: Unauthorized
        415:
          description: Wrong content type (should be JSON)
        422:
          description: Missing fields
  /projects/{projectId}/pdf:
    post:
      tags:
        - projects
        - compile
      summary: Compiles the project
      security:
        - session_id: []
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      description: Returns a compiled PDF of the project and updates the project document text
      responses:
        200:
          description: Project updated successfully
          content:
            application/pdf:
              schema:
                type: string
          headers:
            Content-Disposition:
              schema:
                type: string
              example: inline
        400:
          description: Malformed Request
        401:
          description: Unauthorized
        415:
          description: Wrong content type (should be JSON)
        422:
          description: Missing fields
  /projects/{projectId}/resources:
    parameters:
      - in: path
        name: projectId
        schema:
          type: integer
        required: true
    get:
      tags:
        - resources
        - projects
      summary: Gets metadata of resources in project
      security:
        - user_id: []
      description: Returns a list of metadata of all the resources in the given project
      responses:
        200:
          description: Resource created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ResourceMetadata"
        400:
          description: Malformed Request
        404:
          description: Project not found
        422:
          description: Missing paramaters
    post:
      tags:
        - resources
        - projects
      summary: Creates new resource in project
      security:
        - user_id: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceMetadata"
      description: Creates a new resource with given name for the given project
      responses:
        201:
          description: Resource created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
        400:
          description: Malformed Request
        404:
          description: Project not found
        409:
          description: Duplicate resource
        415:
          description: Wrong content type (should be JSON)
        422:
          description: Missing paramaters
  /projects/{projectId}/resources/{resourceId}:
    parameters:
      - in: path
        name: projectId
        schema:
          type: integer
        required: true
      - in: path
        name: resourceId
        schema:
          type: integer
        required: true
    put:
      tags:
        - resources
        - projects
      summary: Updates resource content in project
      security:
        - user_id: []
      requestBody:
        content:
          image/*:
            schema:
              type: string
              format: binary
      description: Uploads new content of a given resource in a given project
      responses:
        204:
          description: Resource uploaded successfully
        400:
          description: Malformed Request
        404:
          description: Project or resource not found
        413:
          description: Uploaded file size larger than allowed
        422:
          description: Missing paramaters
components:
  schemas:
    Credentials:
      type: object
      properties:
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: Password1@
    Project:
      type: object
      properties:
        project_id:
          type: integer
          format: int64
          example: 1
        owner_id:
          type: ineger
          format: int64
          example: 1
        owner_email:
          type: string
          format: email
          example: john@email.com
        main_document_id:
          type: integer
          format: int64
          example: 1
        project_name:
          type: string
          example: sample_project
        created_at:
          type: string
          format: timestamp
          example: 2023-06-17 14:23:48.458950
        last_modified:
          type: string
          format: timestamp
          example: 2023-06-17 14:23:48.458950
    ProjectMetadata:
      type: object
      properties:
        name:
          type: string
          example: sample_project
    Resource:
      type: object
      properties:
        resource_id:
          type: string
          example: 1
        project_id:
          type: string
          example: 1
        name:
          type: string
          example: sample_resource.png
    ResourceMetadata:
      type: object
      properties:
        name:
          type: string
          example: sample_resource.png
  securitySchemes:
    session_id:
      type: apiKey
      in: cookie
      name: RSESSID
